# Generated by Django 4.1.7 on 2023-05-08 08:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import training_course.help_functions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название категории')),
                ('name_visible', models.CharField(max_length=50, unique=True, verbose_name='Название категории, которое будут видеть пользователи')),
                ('photo', models.ImageField(upload_to=training_course.help_functions.category_photo_upload_to, verbose_name='Фото для главной страницы')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='наименование тега')),
                ('name_visible', models.CharField(max_length=50, unique=True, verbose_name='Наименование тега, которое будет видель пользователи')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='TrainingCourseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название курса')),
                ('max_count_teachers', models.PositiveSmallIntegerField(verbose_name='Максимальное количество учителей на курсе')),
                ('max_count_students', models.PositiveSmallIntegerField(verbose_name='Максимальное количество студентов на курсе')),
                ('photo', models.ImageField(help_text='Изображение, которое будет отображаться в заголовке курса', upload_to=training_course.help_functions.courses_photo_upload_to, verbose_name='Фото для курса')),
                ('price', models.PositiveIntegerField(verbose_name='Цена за курс')),
                ('f_stop', models.BooleanField(default=False, verbose_name='Флаг окончания курса')),
                ('datetime_course_start', models.DateTimeField(verbose_name='Дата начала курса')),
                ('datetime_course_end', models.DateTimeField(verbose_name='Дата окончания курса')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания курса')),
                ('author', models.ForeignKey(help_text='Пользователь, который создал курс', on_delete=django.db.models.deletion.PROTECT, related_name='trainingcourse_author', to=settings.AUTH_USER_MODEL, verbose_name='Автор курса')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='training_course.category', verbose_name='Категория курса')),
                ('students', models.ManyToManyField(related_name='trainingcourse_students', to=settings.AUTH_USER_MODEL, verbose_name='Студенты на курсе')),
                ('tags', models.ManyToManyField(to='training_course.tag', verbose_name='Теги курса')),
                ('teachers', models.ManyToManyField(related_name='trainingcourse_teachers', to=settings.AUTH_USER_MODEL, verbose_name='Учителя на курсе')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.AddConstraint(
            model_name='trainingcoursemodel',
            constraint=models.CheckConstraint(check=models.Q(('max_count_teachers__gt', 0)), name='check_max_count_teachers_gt_null', violation_error_message='Максимальное количество учителей на курсе не может быть равное 0'),
        ),
        migrations.AddConstraint(
            model_name='trainingcoursemodel',
            constraint=models.CheckConstraint(check=models.Q(('max_count_students__gt', 0)), name='check_max_count_students_gt_null', violation_error_message='Максимальное количество студентов на курсе не может быть равное 0'),
        ),
        migrations.AddConstraint(
            model_name='trainingcoursemodel',
            constraint=models.CheckConstraint(check=models.Q(('datetime_course_end__gt', models.F('datetime_course_start'))), name='check_datetime_course_end__gt__datetime_course_start', violation_error_message='Дата окончания курса не может превышать дату начала курса'),
        ),
    ]
